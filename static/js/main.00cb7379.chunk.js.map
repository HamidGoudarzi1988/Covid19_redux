{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","actions/dailyData.js","actions/country.js","components/CountryPicker/CountryPicker.jsx","actions/fetchedCounries.js","actions/data.js","App.js","reducers/index.js","reducers/data.js","reducers/country.js","reducers/dailyData.js","reducers/fetchedCountries.js","store/store.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","useSelector","state","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","dispatch","useDispatch","useEffect","getState","fetchAPI","type","payload","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","addCountry","CountryPicker","fetchedCountries","fetchedAPI","FormControl","NativeSelect","defaultValue","onChange","e","target","fetchedData","formControl","i","key","App","countyry","covidData","image","src","coronaImage","alt","reducers","combineReducers","action","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","render","document","getElementById"],"mappings":"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","file":"static/js/main.00cb7379.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__13Wul\",\"card\":\"Cards_card__1Q91z\",\"infected\":\"Cards_infected__2ZbPc\",\"recovered\":\"Cards_recovered__1_Nhr\",\"deaths\":\"Cards_deaths__1ecFq\"};","import React from 'react';\r\n\r\nimport { Card, CardContent, Typography, Grid, StylesProvider } from '@material-ui/core'\r\nimport styles from './Cards.module.css'\r\nimport CountUp from 'react-countup'\r\nimport cx from 'classnames'\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Cards = () => {\r\n    const data = useSelector(state=> state.data)\r\n    // { data: { confirmed, recovered, deaths, lastUpdate } }\r\n    // { data: { confirmed, recovered, deaths, lastUpdate } }\r\n    const { confirmed, recovered, deaths, lastUpdate } = data\r\n\r\n    if (!data.confirmed) {\r\n        return 'Loading...'\r\n    }\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify='center'>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color='textSecondary' gutterBottom>Infected</Typography>\r\n                        <Typography variant='h5' >\r\n                            <CountUp\r\n                                start={0}\r\n                                end={confirmed.value}\r\n                                duration={2.5}\r\n                                separator=','\r\n                            />\r\n                        </Typography>\r\n                        <Typography color='textSecondary ' >{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant='body2 ' >Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color='textSecondary' gutterBottom>Recoverd</Typography>\r\n                        <Typography variant='h5' >\r\n                            <CountUp\r\n                                start={0}\r\n                                end={recovered.value}\r\n                                duration={2.5}\r\n                                separator=','\r\n                            />\r\n                        </Typography>\r\n                        <Typography color='textSecondary ' >{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant='body2 ' >Number of recovery from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color='textSecondary' gutterBottom>Deaths</Typography>\r\n                        <Typography variant='h5' >\r\n                            <CountUp\r\n                                start={0}\r\n                                end={deaths.value}\r\n                                duration={2.5}\r\n                                separator=','\r\n                            />\r\n                        </Typography>                        <Typography color='textSecondary ' >{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant='body2 ' >Number of deaths caused by COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n            </Grid>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Cards;","import axios from 'axios'\r\n\r\nconst url = 'https://covid19.mathdro.id/api'\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableUrl = url;\r\n    if (country) {\r\n        changeableUrl = `${url}/countries/${country}`;\r\n    }\r\n\r\n    try {\r\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n        return { confirmed, recovered, deaths, lastUpdate }\r\n    } catch (error) {\r\n        console.log(error)\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n\r\n        }))\r\n        return modifiedData\r\n    } catch (error) {\r\n        console.log(error)\r\n\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const { data: { countries } } = await axios.get(`${url}/countries`)\r\n\r\n        return countries.map(country => country.name)\r\n    } catch (error) {\r\n        console.log(error)\r\n\r\n    }\r\n}","import React, { useEffect } from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2'\r\nimport styles from './Chart.module.css'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addDailyData } from '../../actions/dailyData';\r\n\r\nconst Chart = () => {\r\n    const data = useSelector(state => state.data)\r\n    const country = useSelector(state=>state.country)\r\n    const dailyData = useSelector(state=> state.dailyData)\r\n    const dispatch = useDispatch()\r\n    // { data: { confirmed, recovered, deaths }, country }\r\n    const { confirmed, recovered, deaths} = data\r\n\r\n    // const [dailyData, setDailyData] = useState([])\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            dispatch(addDailyData())\r\n        }\r\n        fetchAPI()\r\n    }, [])\r\n\r\n    const lineChart = (\r\n        dailyData.length  //0\r\n            ? (\r\n                <Line\r\n                    data={{\r\n                        labels: dailyData.map(({ date }) => date),\r\n                        datasets: [{\r\n                            data: dailyData.map(({ confirmed }) => confirmed),\r\n                            label: 'Infected',\r\n                            borderColor: '#000000ff',\r\n                            fill: true,\r\n                        }, {\r\n                            data: dailyData.map(({ deaths }) => deaths),\r\n                            label: 'Deaths',\r\n                            borderColor: 'red',\r\n                                backgroundColor: 'rgba(168, 26, 26, 0.897)',\r\n                            fill: true,\r\n                        }],\r\n\r\n                    }}\r\n                />\r\n            ) : null\r\n    )\r\n\r\n    const barChart = (\r\n        confirmed ? (\r\n            <Bar\r\n                data={{\r\n                    labels: ['Infected', 'Recovered', 'Deaths'],\r\n                    datasets: [{\r\n                        label: 'People',\r\n                        backgroundColor: [\r\n                            'rgba(255, 0, 179, 0.5)',\r\n                            'rgba(53, 119, 53, 0.986)',\r\n                            'rgba(168, 26, 26, 0.897)'\r\n                        ],\r\n                        data: [confirmed.value, recovered.value, deaths.value]\r\n                    }]\r\n                }}\r\n                options={{\r\n                    legend: { display: false },\r\n                    title: { display: true, text: `Current state in ${country}` }\r\n                }}\r\n            />\r\n        ) : null\r\n    )\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chart;","import { fetchDailyData } from \"../api\"\r\n\r\nexport const addDailyData = () => {\r\n    return async (dispatch, getState) => {\r\n        const fetchAPI = await fetchDailyData()\r\n        await dispatch({ type: 'ADD_DAILY_DATA', payload: fetchAPI })\r\n\r\n    }\r\n}","export const addCountry = (country) => {\r\n    return async (dispatch, getState) => {\r\n        await dispatch({ type: 'ADD_COUNTRY', payload: country })\r\n\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core'\r\nimport styles from './CountryPicker.module.css'\r\nimport { fetchCountries } from '../../api'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addData2 } from '../../actions/data';\r\nimport { addfetchedCountries } from '../../actions/fetchedCounries';\r\nconst CountryPicker = () => {\r\n    // { handleCountryChange }\r\n    const dispatch = useDispatch()\r\n    // const [fetchedCountries, setFetchedCountries] = useState([])\r\n    const fetchedCountries = useSelector(state => state.fetchedCountries)\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            // setFetchedCountries(await fetchCountries())\r\n            dispatch(addfetchedCountries())\r\n        }\r\n\r\n        fetchAPI()\r\n    }, [fetchedCountries])\r\n    return (\r\n        <FormControl>\r\n            <NativeSelect defaultValue='' onChange={(e) => dispatch(addData2(e.target.value))} className={styles.formControl}>\r\n                <option value=''>Global</option>\r\n                {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    );\r\n}\r\n\r\nexport default CountryPicker;","import { fetchCountries } from \"../api\"\r\n\r\nexport const addfetchedCountries = () => {\r\n    return async (dispatch, getState) => {\r\n        const fetchedAPI = await fetchCountries()\r\n        await dispatch({ type: 'ADD_COUNTRIES', payload: fetchedAPI })\r\n\r\n    }\r\n}","import { addCountry } from \"./country\"\r\nimport { fetchData } from \"../api\"\r\n\r\nexport const addData = () =>{\r\n    return  async (dispatch, getState)=>{\r\n        //fetch data\r\n        const fetchedData = await fetchData()\r\n        await dispatch({ type: \"ADD_DATA\", payload: fetchedData})\r\n        \r\n    }\r\n}\r\nexport const addData2 = (country) =>{\r\n    return  async (dispatch, getState)=>{\r\n        //fetch data\r\n        const fetchedData = await fetchData(country)\r\n        await dispatch({ type: \"ADD_DATA\", payload: fetchedData})\r\n        await dispatch(addCountry(country))\r\n    }\r\n}","import React, {  useEffect } from 'react';\r\n\r\nimport { Cards, Chart, CountryPicker } from './components'\r\nimport styles from './App.module.css'\r\nimport coronaImage from './images/image.png'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addData } from './actions/data';\r\n\r\n\r\n\r\nconst App = () => {\r\n\r\n    // const [data, setData] = useState({})\r\n    const data = useSelector(state => state.data)\r\n    // const [country, setCountry] = useState('') \r\n    const countryn = useSelector(state => state.countyry)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        // const covidData = async () => {\r\n        // const fetchedData = await fetchData()\r\n        // setData(await fetchedData)\r\n        // } \r\n        const covidData = async () => {\r\n            dispatch(addData())\r\n        }\r\n        covidData()\r\n    }, [])\r\n\r\n    // const handleCountryChange = async (country) => {\r\n    //     //fetch data\r\n    //     const fetchedData = await fetchData(country)\r\n\r\n    //     //set state\r\n    //     setData(fetchedData)\r\n    //     setCountry(country)\r\n\r\n    // }\r\n\r\n    return (\r\n        <div className={styles.container} >\r\n            <img className={styles.image} src={coronaImage} alt='COVID-19' />\r\n            {/* <Cards data={data} /> */}\r\n            <Cards />\r\n            {/* <CountryPicker handleCountryChange={handleCountryChange} /> */}\r\n            <CountryPicker />\r\n            {/* <Chart data={data} country={country} /> */}\r\n            <Chart />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","import { combineReducers } from \"redux\";\r\nimport { dataReducer } from \"./data\";\r\nimport { countryReducers } from \"./country\";\r\nimport { dailyDataReducer } from './dailyData'\r\nimport { fetchedCountriesReucer } from \"./fetchedCountries\";\r\n\r\n\r\n\r\nexport const reducers = combineReducers({\r\n    data: dataReducer,\r\n    country: countryReducers,\r\n    dailyData: dailyDataReducer,\r\n    fetchedCountries: fetchedCountriesReucer,\r\n})","\r\nexport const dataReducer = (state={},action)=>{\r\n    switch (action.type){\r\n        case 'ADD_DATA':\r\n            return {...action.payload}\r\n        case \"DELETE_DATA\":\r\n            return [...action.payload];\r\n        case \"UPDATE_DATA\":\r\n            return [...action.payload];\r\n        default:\r\n            return state;\r\n    }\r\n}","export const countryReducers = (state='', action)=>{\r\n    switch (action.type){\r\n        case 'ADD_COUNTRY':\r\n            return action.payload\r\n        case 'UPDATE_COUNTRY':\r\n            return action.payload\r\n        case 'CLEAR_PERSON':\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}","export const dailyDataReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'ADD_DAILY_DATA':\r\n            return [...action.payload]\r\n        default:\r\n            return state\r\n    }\r\n}","export const fetchedCountriesReucer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'ADD_COUNTRIES':\r\n            return [...action.payload]\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore, compose, applyMiddleware } from 'redux'\r\nimport { reducers } from '../reducers'\r\nimport thunk from 'redux-thunk'\r\n\r\n\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    compose(\r\n        applyMiddleware(thunk),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n        window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n)\r\n\r\n\r\nstore.subscribe(() => console.log(store.getState()));\r\n","import React from 'react';\r\nimport {render} from 'react-dom'\r\nimport App from './App'\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store/store';\r\n\r\n\r\nrender(<Provider store={store}>\r\n    <App />\r\n</Provider>, document.getElementById('root'))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2KWct\",\"image\":\"App_image__1Rmup\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3n9LO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2FOom\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}